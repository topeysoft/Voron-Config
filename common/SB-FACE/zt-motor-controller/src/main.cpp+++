#include "Arduino.h"
#include "avr/interrupt.h"

volatile unsigned long rc_timeStart1;
volatile unsigned long rc_timeStart2;
volatile int rc_value1;
volatile int rc_value2;
volatile byte rcPin1LastState = 0;
volatile byte rcPin2LastState = 0;

int percentage1 = 0;
int percentage2 = 0;
const byte pwmPin1 = 0;
const byte pwmPin2 = 1;
const byte rcPin1 = 2;
const byte rcPin2 = 3;

void setup()
{
  pinMode(rcPin1, INPUT);
  pinMode(rcPin2, INPUT);
  pinMode(pwmPin1, OUTPUT);
  pinMode(pwmPin2, OUTPUT);

  GIMSK = 0b00100000; // turn on pin change interrupts
  PCMSK = 0b00001100; // turn on interrupts on pin PB0 and PB2 (physical pins 0 & 2)
  // PCMSK = 0b00000101; // turn on interrupts on pin PB0 and PB2 (physical pins 0 & 2)
  sei();

  TCCR1 = 0b00001110; // set the clock select bits of the Timer1 control register to make it run at ~980Hz so that our PWM output is close to 1KHz
}

void loop()
{
  percentage1 = map(rc_value1, 1000, 2000, 0, 255); // assume the receiver is outputting exactly in spec between 1000 and 2000; it's probably not but should be close enough
  percentage2 = map(rc_value2, 1000, 2000, 0, 255);
  percentage1 = constrain(percentage1, 0, 255);
  percentage2 = constrain(percentage2, 0, 255);
  analogWrite(pwmPin1, percentage1);
  analogWrite(pwmPin2, percentage2);
}

ISR(PCINT0_vect)
{
  if (digitalRead(rcPin1) == HIGH)
  {
    if (rcPin1LastState == 0)
    {
      rc_timeStart1 = micros();
      rcPin1LastState = 1;
    }
  }
  else
  {
    if (rcPin1LastState == 1)
    {
      rc_value1 = micros() - rc_timeStart1;
      rcPin1LastState = 0;
    }
  }
  if (digitalRead(rcPin2) == HIGH)
  {
    if (rcPin2LastState == 0)
    {
      rc_timeStart2 = micros();
      rcPin2LastState = 1;
    }
  }
  else
  {
    if (rcPin2LastState == 1)
    {
      rc_value2 = micros() - rc_timeStart2;
      rcPin2LastState = 0;
    }
  }
}