#include <Arduino.h>
#include <IBusBM.h>
#include <Servo.h>

/*
  Translate iBUS signal to servo

  Supports any Arduino board where serial0 is available.

  For boards where serial0 is connected to the onboard USB port (such as MEGA, UNO and micro) you need
  to disconnect the RX line from the receiver during programming.

  Alternatively you can change the code below to use another serial port.

  Please use 5V boards only.

  Serial port RX/TX connected as follows:
  - RX connected to the iBUS servo pin (disconnect during programming on MEGA, UNO and micro boards!)
  - TX left open or for Arduino boards without an onboard USB controler - connect to an
    USB/Serial converter to display debug information on your PC (set baud rate to 115200).

*/

IBusBM IBus;   // IBus object
Servo myservo; // create servo object to control a servo
int leftPin = 2;
int rightPin = 4;
int leftCh = 1;
int rightCh = 2;
void setup()
{
    // Serial.begin(115200);   // remove comment from this line if you change the Serial port in the next line

    IBus.begin(Serial1); // iBUS connected to Serial0 - change to Serial1 or Serial2 port when required

    Serial.begin(115200); // open serial port, set the baud rate to 115200 bps
    myservo.attach(9);    // attaches the servo on pin 9 to the servo object

    Serial.println("Start IBus2PWM");

    pinMode(leftPin, OUTPUT);
    pinMode(rightPin, OUTPUT);
}

int saveval[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0};

void loop()
{
    int val;
    int i = 1;
    // for (int i = 0; i < 10; i++)
    // {
    int lVal = IBus.readChannel(leftCh - 1);
    int rVal = IBus.readChannel(rightCh - 1);
    int lPwm = map(lVal, 1005, 2005, 0, 255);
    int rPwm = map(rVal, 1005, 2005, 0, 255);
    Serial.print("L: ");
    Serial.print(lVal);
    Serial.print(" R: ");
    Serial.print(rVal);
    Serial.print(" LPWM: ");
    Serial.print(lPwm);
    Serial.print(" RPWM: ");
    Serial.println(rPwm);
    analogWrite(leftPin, lPwm);
    analogWrite(rightPin, rPwm);

    // val = IBus.readChannel(i);
    // // Serial.print("VAL: "); // display new value in microseconds on PC
    // // Serial.println(val);   // display new value in microseconds on PC
    // if (saveval[i] != val)
    // {
    //     byte pwm = map(val, 1005, 2005, 0, 255);
    //     Serial.print("NEW: ");  // display new value in microseconds on PC
    //     Serial.print("CH: ");   // display new value in microseconds on PC
    //     Serial.print(i + 1);    // display new value in microseconds on PC
    //     Serial.print(" VAL: "); // display new value in microseconds on PC
    //     Serial.print(val);      // display new value in microseconds on PC
    //     Serial.print(" PWM: "); // display new value in microseconds on PC
    //     Serial.println(pwm);    // display new value in microseconds on PC
    //     saveval[i] = val;
    //     myservo.writeMicroseconds(val); // sets the servo position according to the scaled value
    // }
    // delay(1);
    // }
    // val = IBus.readChannel(0); // get latest value for servo channel 1

    delay(100);
}
