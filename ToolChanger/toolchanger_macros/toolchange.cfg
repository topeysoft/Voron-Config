# Variables for the tool change macros
[gcode_macro _TOOL_CHANGE_VARS]
description: Set the variables for the tool change macros
variable_tool_focus_y: 258
variable_tool_focus_y_with_tool: 190
variable_tool_1_lock_y: 272
variable_tool_2_lock_y: 273
variable_tool_3_lock_y: 273
variable_tool_4_lock_y: 273
variable_tool_1_x: 6  
variable_tool_2_x: 95
variable_tool_3_x: 230
variable_tool_4_x: 319
variable_drop_z: 15

variable_tool_map: ({
        0: "extruder", 
        1: "extruder1", 
        2: "extruder2", 
        3: "extruder3"
    }) 
gcode:
    {action_respond_info("This macro holds the variables for the tool change macros, and should not be called directly.")}

[gcode_macro _TOOL_CHANGE_PICKUP]
description: Tool change macro for attaching a tool
gcode:
    {% set vars= printer["gcode_macro _TOOL_CHANGE_VARS"] %}
    {% set tool_focus_y = vars["tool_focus_y"] %}
    {% set tool_focus_y_with_tool = vars["tool_focus_y_with_tool"] %}
    {% set tool_1_lock_y = vars["tool_1_lock_y"] %}
    {% set tool_2_lock_y = vars["tool_2_lock_y"] %}
    {% set tool_3_lock_y = vars["tool_3_lock_y"] %}
    {% set tool_4_lock_y = vars["tool_4_lock_y"] %}
    {% set tool_1_x = vars["tool_1_x"] %}
    {% set tool_2_x = vars["tool_2_x"] %}
    {% set tool_3_x = vars["tool_3_x"] %}
    {% set tool_4_x = vars["tool_4_x"] %}
    {% set tool_map = vars["tool_map"] %}
    {% set drop_z = vars["drop_z"] %}
  # If tool is already attached to the toolhead, do nothing
  {% if printer.toolhead.extruder == params.TOOL_NUMBER %}
    M117 "Tool already attached, no action taken."
  {% else %}
    # Drop z axis to avoid collision
    _DROP_Z_IF_NEEDED
    {% set tool_lock_y = ({
        0: tool_1_lock_y, 
        1: tool_2_lock_y,
        2: tool_3_lock_y,
        3: tool_4_lock_y
    }) %}
    {% set tool_x = ({
        0: tool_1_x,
        1: tool_2_x,
        2: tool_3_x,
        3: tool_4_x
    }) %}
    {% set tool_number = params.TOOL_NUMBER|default(0)|int %}
    # Home coupler to ensure it is in the correct position
    COUPLER_UNLOCK

    # Move to the tool selector change position
    G1 X{tool_x[tool_number]} Y{tool_focus_y} F6000
    
    # Gently move the tool to the lock position
    G1 Y{tool_lock_y[tool_number]} F800
    M400

    # Lock the tool
    COUPLER_LOCK

    # Gentry move the tool to the focus position
    G1 Y{tool_focus_y_with_tool} F1200

    # Set the current tool number
    SAVE_VARIABLE VARIABLE=tool_current VALUE={tool_number}
  {% endif %}



# Tool change macro for putting down a tool
# This macro is called when a tool change is initiated and the tool is to be put down
# The tool number is passed as a parameter
[gcode_macro _TOOL_CHANGE_PUTDOWN]
description: Tool change macro for detaching a tool
gcode:
    {% set vars= printer["gcode_macro _TOOL_CHANGE_VARS"] %}
    {% set tool_focus_y = vars["tool_focus_y"] %}
    {% set tool_focus_y_with_tool = vars["tool_focus_y_with_tool"] %}
    {% set tool_1_lock_y = vars["tool_1_lock_y"] %}
    {% set tool_2_lock_y = vars["tool_2_lock_y"] %}
    {% set tool_3_lock_y = vars["tool_3_lock_y"] %}
    {% set tool_4_lock_y = vars["tool_4_lock_y"] %}
    {% set tool_1_x = vars["tool_1_x"] %}
    {% set tool_2_x = vars["tool_2_x"] %}
    {% set tool_3_x = vars["tool_3_x"] %}
    {% set tool_4_x = vars["tool_4_x"] %}
    {% set tool_map = vars["tool_map"] %}
    {% set drop_z = vars["drop_z"] %}
    {% set tool_lock_y = ({
        0: tool_1_lock_y, 
        1: tool_2_lock_y,
        2: tool_3_lock_y,
        3: tool_4_lock_y
    }) %}
    {% set tool_x = ({
        0: tool_1_x,
        1: tool_2_x,
        2: tool_3_x,
        3: tool_4_x
    }) %}

     # Drop z axis to avoid collision
    _DROP_Z_IF_NEEDED

    {% set tool_number = params.TOOL_NUMBER|default(0)|int %}

    # Move to the tool change position with the tool
    G1 X{tool_x[tool_number]} Y{tool_focus_y_with_tool} F6000

    # Gently move the tool to the lock position
    G1 Y{tool_lock_y[tool_number]} F1200
    M400

    # Unlock the tool
    COUPLER_UNLOCK

    # Gentry move the tool selector to the focus position
    G1 Y{tool_focus_y} F800
    M400

    # Set the current tool number to -1
    SAVE_VARIABLE VARIABLE=tool_current VALUE=-1

[gcode_macro RELEASE_TOOL]
gcode:
    COUPLER_UNLOCK
    SAVE_VARIABLE VARIABLE=tool_current VALUE=-1


# [gcode_macro ACTIVATE_EXTRUDER]
# description: Replaces built-in macro for a X-in, 1-out extruder configuration SuperSlicer fix
# rename_existing: ACTIVATE_EXTRUDER_BASE
# gcode:
#     {% if 'EXTRUDER' in params %}
#       {% set ext = params.EXTRUDER|default(EXTRUDER) %}
#       {% if ext == "extruder"%}
#         {action_respond_info("Switching to extruder0.")}
#         T0
#       {% elif ext == "extruder1" %}
#         {action_respond_info("Switching to extruder1.")}
#         T1
#       {% else %}
#         {action_respond_info("EXTRUDER value being passed.")}
#         ACTIVATE_EXTRUDER_BASE EXTRUDER={ext}
#       {% endif %}
#     {% endif %}
#     {% if 'EXTRUDER' not in params %}
#       {action_respond_info("No EXTRUDER value being passed.")}
#       ACTIVATE_EXTRUDER_BASE
#     {% endif %}

[gcode_macro _RESET_XY_OFFSET]
gcode:
    SET_GCODE_OFFSET X=0 MOVE=1
    SET_GCODE_OFFSET Y=0 MOVE=1

[gcode_macro DETACH_TOOL]
gcode:
    _SELECT_TOOL TOOL_NUMBER=-1

[gcode_macro _SELECT_TOOL]
gcode:
    _RESET_XY_OFFSET 
    {% set vars= printer["gcode_macro _TOOL_CHANGE_VARS"] %}
    {% set tool_map = vars["tool_map"] %}
    # If the printer is not homed throw an error
    {% if "xyz" not in printer.toolhead.homed_axes %}
        _SHOW_NOT_HOME_ALERT
    {% else %}
        {% set tool_number = params.TOOL_NUMBER|int %}
        {% set svv = printer.save_variables.variables %}
        {% set currentTool = svv.tool_current|default(-1)|int %}
        {% set newTool =  False %}
        { action_respond_info("Tool change requested. current_tool: {}, requested_tool: {}".format((currentTool), (tool_number))) }

        {% if currentTool != tool_number %} # if requested tool is different from the current tool
            {% if tool_number == -1 %} # If the tool is requested to be put down
                {% if currentTool == -1 %} # If no tool is currently attached
                    {action_respond_info("No tool attached, no action taken.")}
                {% else %}
                     {action_respond_info("Docking tool T{}.".format(currentTool))}
                    _TOOL_CHANGE_PUTDOWN TOOL_NUMBER={currentTool}
                    {% set newTool = False %}
                {% endif %}
            {% elif currentTool == -1 %} # If no tool is currently attached
                # {% if tool_number == -1 %}
                #     {action_respond_info("No tool attached, no action taken.")}
                # {% else %}
                    _TOOL_CHANGE_PICKUP TOOL_NUMBER={tool_number}
                    {% set newTool = True %}
                # {% endif %}
            {% else %} # If a different tool is already attached
                _TOOL_CHANGE_PUTDOWN TOOL_NUMBER={currentTool}
                _TOOL_CHANGE_PICKUP TOOL_NUMBER={tool_number}
                M400
                {% set newTool = True %}
            {% endif %}
            {% if newTool %} # If a new tool is attached
                {action_respond_info("New tool attached, activating extruder.")}
                # Convert the tool number to string 
                # {% set extruder = "" %}
                # {% if tool_number == 0 %}
                #    {% set extruder = "extruder" %}
                # {% elif tool_number == 1 %}
                #    {% set extruder = "extruder1" %}
                # {% elif tool_number == 2 %}
                #    {% set extruder = "extruder2" %}
                # {% elif tool_number == 3 %}
                #    {% set extruder = "extruder3" %}
                # {% else %}
                #     {action_respond_info("Invalid tool number.")}
                # {% endif %}

                {% set extruder = tool_map[tool_number] %}
                # {% if extruder != "" %}
                    {% if printer.extruder != extruder %} # If the current extruder is not the same as the new tool
                        ACTIVATE_EXTRUDER EXTRUDER={extruder}
                        {% if printer.extruder != extruder %}
                            {action_respond_info("Extruder activation failed.")}
                        {% else %}
                            {action_respond_info("Extruder activation successful.")}
                        {% endif %}
                    {% else %}
                        {action_respond_info("Extruder already activated.")}
                    {% endif %}
                # {% endif %}
            {% endif %}
            SAVE_VARIABLE VARIABLE=tool_current VALUE={tool_number}
            {action_respond_info("Tool change complete.")}
        {% else %}
            {% if tool_number == -1 %}
                {action_respond_info("No tool attached, no action taken.")}
            {% else %}
                {action_respond_info("Tool already attached, no action taken.")}
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro T_1]
gcode:
    DETACH_TOOL

[gcode_macro T0]
gcode:
    _SELECT_TOOL TOOL_NUMBER=0
    SET_GCODE_OFFSET Z=8.694 MOVE=1                 # Adjust z-height
    SET_GCODE_OFFSET X=0 Y=0 MOVE=1
    # G1 X293.42 Y66.23 Z34 F6000

[gcode_macro T1]
gcode:
    _SELECT_TOOL TOOL_NUMBER=1
    SET_GCODE_OFFSET Z=8.944 MOVE=1                 # Adjust z-height

    # Select tool 1
    # SET_GCODE_OFFSET X0 Y0 MOVE=1  
    # Go to fixed point on the bed marked by tool 0
    # Micro-adjust the tool position until the nozzle is exactly at the fixed point
    # Calculate the offset between the fixed point and the actual position as follows:
    # Offset = Actual position - Fixed position
    # Fixed position = G1 X294.06 Y66.19 Z34 F3000
    # Actual position: x=293.59 y=65.87 z=34.00
    # X Offset = 293.59 - 294.06 = -0.47
    # Y Offset = 65.87 - 66.19 = -0.32
    # Change the offset to the calculated values
    SET_GCODE_OFFSET X=-0.47 Y=-0.32 MOVE=1 

    # Repeat the process for the other tools

    

[gcode_macro T2]
gcode:
    _SELECT_TOOL TOOL_NUMBER=2
    SET_GCODE_OFFSET Z=8.844 MOVE=1                 # Adjust z-height
    
    # Offset = Actual position - Fixed position
    # Fixed position = G1 X294.06 Y66.19 Z34 F3000
    # Actual position: x=294.31 y=66.39 z=34.00
    # Offset x = 294.31 - 294.06 = 0.25
    # Offset y = 66.39 - 66.19 = 0.20
    # Change the offset to the calculated values
    SET_GCODE_OFFSET X=0.25 Y=0.20 MOVE=1



[gcode_macro T3]
gcode:
    _SELECT_TOOL TOOL_NUMBER=3
    # SET_GCODE_OFFSET Z=8.544 MOVE=1                 # Adjust z-height
    SET_GCODE_OFFSET Z=8.744 MOVE=1                 # Adjust z-height
    SET_GCODE_OFFSET X=-0.07    MOVE=1                      
    SET_GCODE_OFFSET Y=0.15    MOVE=1   
    
    # Offset = Actual position - Fixed position
    # Fixed position = G1 X294.06 Y66.19 Z34 F3000
    # Actual position: x=294.11 y=66.76 z=34.00
    # Offset x = 294.11 - 294.06 = 0.05
    # Offset y = 66.76 - 66.19 = 0.57
    # Change the offset to the calculated values
    SET_GCODE_OFFSET X=0.05 Y=0.57 MOVE=1


[gcode_macro _SHOW_NOT_HOME_ALERT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Alert"
    RESPOND TYPE=command MSG="action:prompt_text The printer is not homed. Please home the printer before continuing."
    RESPOND TYPE=command MSG="action:prompt_footer_button Okay|RESPOND TYPE=command MSG=action:prompt_end|primary"
    # RESPOND TYPE=command MSG="action:prompt_footer_button continue|RESPOND TYPE=command MSG=action:prompt_end"
    # RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_PRINT|error"
    RESPOND TYPE=command MSG="action:prompt_show"

    # BED_MESH_CALIBRATE PROFILE=adapted MESH_MIN=100,80 MESH_MAX=180,120 PROBE_COUNT=3 ADAPTIVE=1 ADAPTIVE_MARGIN=5


# TOOL_CHANGE PREVIOUS=[previous_extruder] NEXT=[next_extruder] CURRENT_Z=[toolchange_z] TEMPERATURE=[temperature[0]]
[gcode_macro CHANGE_TOOL]
description: Used to change the tool, this macro is called when a tool change is initiated in the sliced file
gcode:
    {% set next_tool = params.NEXT|default(0)|int %}
    {% set prev_tool = params.PREVIOUS|default(-1)|int %}
    {% set toolchange_z = params.CURRENT_Z|default(0)|int %}
    {% set tool_current = printer.save_variables.variables.tool_current|default(-1)|int %}
    {% set temperature = params.TEMPERATURE|default(235)|int %}
    
    {% if next_tool != prev_tool  and next_tool != tool_current %}
        # Set all tools to standby temperature
        _SET_ALL_TOOL_STANDBY_TEMPERATURES TEMPERATURE={temperature}
        # Move z down to toochange_z + 10
        G1 Z{toolchange_z + 10} F3000
        T{next_tool}
        # Set all tools to standby temperature
        # Set the seleted tool temperature
        # {% if params.TEMPERATURE %}
            # M104 S{params.TEMPERATURE} T{next_tool}
            # wait for the temperature to be reached
            M109 S{temperature} T{next_tool}
        # {% endif %}
        # Now let clean the new tool nozzle
        {% if next_tool != -1 %}
            # NOZZLE_PRIME
        {% endif %}
    {% endif %}



[gcode_macro _SET_ALL_TOOL_TEMPERATURES]
description: Set the temperature of all tools
gcode:
    {% set temperature = params.TEMPERATURE|default(0)|int %}
    {% for tool in range(4) %}
        M104 S{temperature} T{tool}
    {% endfor %}

[gcode_macro _SET_ALL_TOOL_STANDBY_TEMPERATURES]
description: Set the standby temperature of all tools
gcode:
    {% set temperature = params.TEMPERATURE|default(200)|int %}
    _SET_ALL_TOOL_TEMPERATURES TEMPERATURE={temperature}

[gcode_macro _SET_ALL_TOOL_OFF]
description: Turn off all tools
gcode:
    {% for tool in range(4) %}
        M104 S0 T{tool}
    {% endfor %}


[gcode_macro _DROP_Z_IF_NEEDED]
description: Drop the z axis if needed
gcode:
    {% set drop_z = printer["gcode_macro _TOOL_CHANGE_VARS"]["drop_z"]|default(10) %}
    {% if drop_z %}
        {% if (printer.toolhead.position.z < 10) %}
                    G1 Z{drop_z} F3000
        {% endif %}
    {% endif %}