
[gcode_arcs]
resolution: 1.0


[gcode_macro _MOTION_VARS]
variable_origin_x: 0
variable_origin_y: 0
variable_origin_z: 0
variable_origin_holder_hole_x: 8
variable_origin_holder_hole_y: 84
variable_default_plunge_depth: 5
variable_default_hole_cut_depth: 5
variable_default_hole_cut_depth_per_pass: 0.5
variable_default_hole_cut_diameter: 5.5 # 5.5mm diameter hole
variable_default_hole_cut_feed_rate: 500
variable_default_plunge_spindle_speed: 10000
variable_default_plunge_feed_rate: 3000
gcode:
    {action_respond_info("Motion variables")}


[gcode_macro GOTO_MAX_X]
gcode:
  _HOME_IF_NEEDED
  {action_respond_info("Moving to max X")}
  G1 X{printer.toolhead.axis_maximum.x} F3000

[gcode_macro GOTO_MAX_Y]
gcode:
  _HOME_IF_NEEDED
  {action_respond_info("Moving to max Y")}
  G1 X{printer.toolhead.axis_maximum.y} F3000

[gcode_macro GOTO_MAX_XY]
gcode:
  _HOME_IF_NEEDED
  {action_respond_info("Moving to max X and Y")}
  G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F3000


[gcode_macro GOTO_ORIGIN_X]
gcode:
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set origin_x = VARS["origin_x"] %}
    _HOME_IF_NEEDED
    {action_respond_info("Moving to origin X")}
    G1 X{origin_x} F3000

[gcode_macro GOTO_ORIGIN_Y]
gcode:
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set origin_y = VARS["origin_y"] %}
    _HOME_IF_NEEDED
    {action_respond_info("Moving to origin Y")}
    G1 Y{origin_y} F3000

[gcode_macro GOTO_ORIGIN_XY]
gcode:
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set origin_x = VARS["origin_x"] %}
    {% set origin_y = VARS["origin_y"] %}
    _HOME_IF_NEEDED
    {action_respond_info("Moving to origin X and Y")}
    G1 X{origin_x} Y{origin_y} F3000

[gcode_macro GOTO_ORIGIN_HOLDER_HOLE]
gcode:
    _HOME_IF_NEEDED
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set origin_holder_hole_x = VARS["origin_holder_hole_x"] %}
    {% set origin_holder_hole_y = VARS["origin_holder_hole_y"] %}
    {action_respond_info("Moving to origin holder hole X and Y")}
    G1 X{origin_holder_hole_x} Y{origin_holder_hole_y} F3000

[gcode_macro PLUNGE]
gcode:
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set default_plunge_depth = VARS["default_plunge_depth"] %}
    {% set plunge_depth = params.DEPTH|default(default_plunge_depth) %}
    {% set rate = params.FEED_RATE|default(VARS["default_plunge_feed_rate"]) %}
    {% set spindle_speed = params.SPINDLE_SPEED|default(VARS["default_plunge_spindle_speed"]) %}
    {action_respond_info("Plunging to depth: " + plunge_depth)}
    M3 S{spindle_speed} # Start spindle 
    G90 # Absolute positioning
    G1 Z-{plunge_depth} F{rate} # Plunge to depth
    M5 # Stop spindle
    # Return to previous z position
    G91 # Relative positioning
    G0 Z{plunge_depth} F{rate}

[gcode_macro CUT_HOLE]
gcode:
    {% set tool_size = params.TOOL_SIZE|default(0)|float %}
    {% if tool_size <=0  %}
        {action_raise_error("Tool size must be greater than 0")}
    {% endif %}
    {% set offset =  params.OFFSET_TYPE|default("in")|string|lower %}
    # if offset is in, the hole will be cut inside the circle
    # if offset is out, the hole will be cut outside the circle
    # if offset is none, the hole will be cut on the circle line itself
    # if offset is anything else, raise an error
    {% if offset not in ["in", "out", "none"] %}
        {action_raise_error("Invalid offset type: {} ".format (offset))}
    {% endif %}
    {% set VARS = printer["gcode_macro _MOTION_VARS"] %}
    {% set default_plunge_depth = VARS["default_plunge_depth"] %}
    {% set hole_cut_depth = params.DEPTH|default(VARS["default_hole_cut_depth"])|float %}
    {% set depth_per_pass = params.DEPTH_PER_PASS|default(VARS["default_hole_cut_depth_per_pass"])|float %}
    {% set hole_cut_diameter = params.DIAMETER|default(VARS["default_hole_cut_diameter"])|float %}
    {% set rate = params.FEED_RATE|default(VARS["default_plunge_feed_rate"]) %}
    {% set spindle_speed = params.SPINDLE_SPEED|default(VARS["default_plunge_spindle_speed"])|int %}
    {action_respond_info("Cutting hole of size {} to depth {}".format(hole_cut_diameter, hole_cut_depth))}
    M3 S{spindle_speed} # Start spindle 
    G90 # Absolute positioning
    # G91 # Relative positioning
    
    # cut a circle with the given diameter and 1mm depth at the rate given per pass
    # We will cut the hole in multiple passes
    ## We can't use range with float, so we will convert the depth to whole number
    {% set depth_per_pass_whole = (depth_per_pass *1000)|int %}
    {% set hole_cut_dept_whole = (hole_cut_depth *1000)|int %}
    {action_respond_info("Cutting depth per pass: {} and total depth: {}".format((depth_per_pass_whole), (hole_cut_dept_whole)))}
    {% for d in range(depth_per_pass_whole, hole_cut_dept_whole, depth_per_pass_whole) %}
        {% set depth = (d/1000)|float %}
        {action_respond_info("Cutting hole to depth: {}".format(depth))}
        G1 Z-{depth} F{rate}
        {% if offset == "in" %}
            {% set f = (hole_cut_diameter-tool_size)/2  %}
        {% elif offset == "out" %}
            {% set f = (hole_cut_diameter+tool_size)/2  %}
        {% elif offset == "none" %}
            {% set f = (hole_cut_diameter)/2  %}
        {% else %}
            {action_raise_error("Invalid offset type: {} ".format (offset))}
        {% endif %}
        {% set f = (hole_cut_diameter-tool_size)/2  %}
        {action_respond_info("Cutting with G2 I{f} J{f} F{rate}".format(f=f, rate=rate))}
        G2 I{f} J{f} F{rate} # Cut a circle
    {% endfor %}

    M5 # Stop spindle
    # Return to previous z position + 10mm
    G91 # Relative positioning
    G0 Z{hole_cut_depth + 10} F{rate}


    # {% for i in range(0, 360, 10) %}
    #     G1 X{hole_cut_diameter/2 * cos(i)} Y{hole_cut_diameter/2 * sin(i)} F{rate}
    #     PLUNGE DEPTH={hole_cut_depth} FEED_RATE={rate} SPINDLE_SPEED={spindle_speed}
    # {% endfor %}

    # G1 Z-{plunge_depth} F{rate} # Plunge to depth
    # M5 # Stop spindle
    # # Return to previous z position
    # G91 # Relative positioning
    # G0 Z{plunge_depth} F{rate}
