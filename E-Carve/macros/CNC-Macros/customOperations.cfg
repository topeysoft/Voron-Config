[gcode_macro GOTO_WORKSPACE_X_Y]
gcode:
  {% set feed_rate = printer.configfile.config["printer"].max_velocity|default(100)|float * 60 %}
  g1 X0 Y0 F{feed_rate}
  
[gcode_macro FLATTEN_SLAB]
gcode:
    {% set max_x = printer.configfile.config["stepper_x"].position_max|float %}
    {% set max_y = printer.configfile.config["stepper_y"].position_max|float %}
    {% set cut_depth = params.CUT_DEPTH|default(-0.5)|float %}

    {% set feed_rate = (params.FEED_RATE|default(10)|float) * 60 %} # Convert mm/s to mm/min
    {% set step_over = params.STEP_OVER|default(15)|float %}
    {% set spindle_speed = params.SPINDLE_SPEED|default(10000)|float %}

    # Use the new  flatten_area macro

    FLATTEN_AREA START_X=0 START_Y=0 END_X={max_x} END_Y={max_y} CUT_DEPTH={cut_depth} FEED_RATE={feed_rate} STEP_OVER={step_over} SPINDLE_SPEED={spindle_speed}


[gcode_macro FLATTEN_AREA]
gcode:

    {% set start_x = params.START_X|default(0)|float %}
    {% set start_y = params.START_Y|default(0)|float %}

    {% set end_x = params.END_X|default(printer.configfile.config["stepper_x"].position_max|float)|float %}
    {% set end_y = params.END_Y|default(printer.configfile.config["stepper_y"].position_max|float)|float %}

    {% set cut_depth = params.CUT_DEPTH|default(-0.5)|float %}

    {% set feed_rate = (params.FEED_RATE|default(10)|float) * 60 %} # Convert mm/s to mm/min
    {% set step_over = params.STEP_OVER|default(15)|float %}
    {% set spindle_speed = params.SPINDLE_SPEED|default(10000)|float %}

    {% set max_z_with_offset = printer.configfile.config["stepper_z"].position_max|float - printer.gcode_move.homing_origin.z|float %}
    
    # Calculate the number of steps needed, ensuring it's an integer
    {% set num_steps = (((end_y - start_y - step_over) / step_over)|round(0, 'ceil'))|int %}

    RESPOND PREFIX="warning" MSG="Offsets are obeyed by this macro" 
    RESPOND PREFIX="info" MSG="Flattening Area: ({start_x}, {start_y}) to ({end_x}, {end_y}), cut depth: {cut_depth}" 

    G90 ; Absolute positioning
    G21 ; Set units to millimeters
    
    M3 S{spindle_speed}
    G0 Z{max_z_with_offset} F{feed_rate / 2} ; Move to safe height

    # Perimeter cut
    G0 X{start_x} Y{start_y} F{feed_rate}
    G1 Z{cut_depth} F{feed_rate / 2}
    G1 X{end_x} F{feed_rate} ; Cut along the X axis
    G1 Y{end_y} F{feed_rate} ; Cut along the Y axis
    G1 X{start_x} F{feed_rate} ; Cut back along the X axis
    G1 Y{start_y} F{feed_rate} ; Cut back along the Y axis

    #End position X=0 Y=0
    G0 X{step_over} F{feed_rate} ; Move to start position at current row

    # Sequential pattern cut
    {% for i in range(num_steps) %}
        {% set ypos = i * step_over + step_over %}
        G0 Y{ypos} F{feed_rate} ; Move to next row

        {% if i % 2 == 1 %}
          # The code here will execute if 'i' is odd.
          G0 X{step_over} F{feed_rate} ; Move to the step_over (near x_min) to perform a cut on moves 1, 3, 5 etc
        {% else %}
          G0 X{end_x - step_over} F{feed_rate} ; Move to the x_max minus step_over to perform a cut on moves 0, 2, 4 etc
        {% endif %}

    {% endfor %}

    G0 Z{max_z_with_offset} ; Raise to safety height
    M5 ; stop spindle
    G28 ; Home machine
